#!/usr/bin/env php
<?php
/*
 * Console application execution begins here.
 */

use Symfony\Component\Console\Application;

// Define path-related constants
define('DS', DIRECTORY_SEPARATOR);
define('ROOT', __DIR__);

// Load Composer autoloader
require_once ROOT . DS . 'vendor' . DS . 'autoload.php';

// Load framework bootstrap
require_once ROOT . DS . 'vendor' . DS . 'chappy-php' . DS . 'chappy-php-framework' . DS . 'src' . DS . 'scripts' . DS . 'bootstrap.php';

// Initialize Symfony Console application
$app = new Application();

// Define all command sources
$commandSources = [
    [
        'namespace' => 'Console\\Commands',
        'path'      => ROOT . DS . 'vendor' . DS . 'chappy-php' . DS . 'chappy-php-framework' . DS . 'src' . DS . 'Console' . DS . 'Commands',
    ],
    [
        'namespace' => 'App\\Lib\\Console\\Commands',
        'path'      => ROOT . DS . 'app' . DS . 'Lib' . DS . 'Console' . DS . 'Commands',
    ],
];

// Load command classes from each source
foreach ($commandSources as $source) {
    if (!is_dir($source['path'])) {
        continue;
    }

    foreach (glob($source['path'] . DS . '*.php') as $commandFile) {
        $className = pathinfo($commandFile, PATHINFO_FILENAME);
        $commandClass = $source['namespace'] . '\\' . $className;

        if (!class_exists($commandClass)) {
            require_once $commandFile;
        }

        if (class_exists($commandClass)) {
            $app->add(new $commandClass());
        }
    }
}


$app->run();
